server:
  port: 19096

spring:
  application:
    name: product-service
  profiles:
    active: dev
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${host.db.mysql.url}:${host.db.mysql.port}/productDB
    username: ${database.username}
    password: ${database.password}
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        default_batch_fetch_size: 500
    open-in-view: false
  data:
    redis:
      host: ${host.db.redis.url}
      port: 6379
#  kafka:
#    bootstrap-servers:
#    producer:
#      value-serializer:
#    consumer:
#      value-deserializer:

#resilience4j:
#  circuitbreaker:
#    configs:
#      default:  # 기본 구성 이름
#        registerHealthIndicator: true  # 애플리케이션의 헬스 체크에 서킷 브레이커 상태를 추가하여 모니터링 가능
#        # 서킷 브레이커가 동작할 때 사용할 슬라이딩 윈도우의 타입을 설정
#        # COUNT_BASED: 마지막 N번의 호출 결과를 기반으로 상태를 결정
#        # TIME_BASED: 마지막 N초 동안의 호출 결과를 기반으로 상태를 결정
#        slidingWindowType: COUNT_BASED  # 슬라이딩 윈도우의 타입을 호출 수 기반(COUNT_BASED)으로 설정
#        # 슬라이딩 윈도우의 크기를 설정
#        # COUNT_BASED일 경우: 최근 N번의 호출을 저장
#        # TIME_BASED일 경우: 최근 N초 동안의 호출을 저장
#        slidingWindowSize: 10  # 슬라이딩 윈도우의 크기를 5번의 호출로 설정
#        minimumNumberOfCalls: 10  # 서킷 브레이커가 동작하기 위해 필요한 최소한의 호출 수를 5로 설정
#        failureRateThreshold: 50  # 실패율이 이 임계값(50%)을 초과하면 서킷 브레이커가 동작
#        slowCallRateThreshold: 100  # 느린 호출의 비율이 이 임계값(100%)을 초과하면 서킷 브레이커가 동작
#        slowCallDurationThreshold: 10000  # 느린 호출의 기준 시간(밀리초)으로, 60초 이상 걸리면 느린 호출로 간주
#        permittedNumberOfCallsInHalfOpenState: 3  # 서킷 브레이커가 Half-open 상태에서 허용하는 최대 호출 수를 3으로 설정
#        # 서킷 브레이커가 Open 상태에서 Half-open 상태로 전환되기 전에 기다리는 시간
#        waitDurationInOpenState: 20s  # Open 상태에서 Half-open 상태로 전환되기 전에 대기하는 시간을 20초로 설정
#  retry:
#    instances:
#      defaultRetry:
#        maxAttempts: 3
#        waitDuration: 1000ms

#eureka:
#  client:
#    service-url:
#      defaultZone: http://${host.url}:9090/eureka/

management:
  zipkin:
    tracing:
      endpoint: "http://${host.zipkin.url}:9411/api/v2/spans"
  tracing:
    sampling:
      probability: 1.0
    prometheus:
      metrics:
        export:
          enabled: true
  endpoints:
    web:
      exposure:
        include: health, info
#  health:
#    components:
#      circuitbreaker:
#        enabled: true